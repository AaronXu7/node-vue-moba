// reset
*{
    box-sizing: border-box;
    outline: none;
}
html{
    font-size: 13px;
}
body{
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.5;
    background: #F1F1F1;
}
a{
    color:#999;
}

// color
$colors:(
    "primary":#db9e3f,
    "white":#fff,
    "smoke":#f9f9f9,
    "grey-0":#343440,
    "grey-1":#222,
    "grey-3":#999,
    "black":#000
);
@each $colorKey,$color in $colors {
    .text-#{$colorKey}{
        color:$color
    }
    .bg-#{$colorKey}{
        background-color:$color
    }
}

// font-size
$base-font-size:1rem;
$font-sizes:(
    // 10px
    xs:0.7692,
    // 12px
    sm:0.9231,
    // 13px
    md:1,
    // 14px
    lg:1.0769,
    // 16px
    xl:1.2308
);
@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey}{
        font-size: $size * $base-font-size;
    }
}

// text
@each $var in (left,center,right) {
    .text-#{$var}{
        text-align: $var;
    }
}

// flex
$justify:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,
    evenly:space-evenly
);
@each $jfKey,$jf in $justify {
    .flex-#{$jfKey}{
        display: flex;
        justify-content: $jf;
    }
}
$align:(
    start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch
);
@each $alKey,$al in $align {
    .f-align-#{$alKey}{
        align-items: $al;
    }
}
$wraps:(
    wrap:wrap,
    nowrap:nowrap,
    reverse:wrap-reverse
);
@each $wrapKey,$wrap in $wraps {
    .f-wrap-#{$wrapKey}{
        flex-wrap: $wrap;
    }
}
.f-column{
    flex-direction: column;
}
.f-1{
    flex: 1;
}

// 间隔
// m-0, mx-0
// spacing
// 0-5: 0
// .mt-1  => margin top  .pb-2
$spacing-types: (
  m: margin,
  p: padding,
);
$spacing-directions: (
  t: top,
  r: right,
  b: bottom,
  l: left,
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);
@each $typeKey, $type in $spacing-types {
    // .m-1
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
        #{$type}: $size * $spacing-base-size;
        }
    }
    // .mx-1 , .my-1
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
        #{$type}-left: $size * $spacing-base-size;
        #{$type}-right: $size * $spacing-base-size;
        }
        .#{$typeKey}y-#{$sizeKey} {
        #{$type}-top: $size * $spacing-base-size;
        #{$type}-bottom: $size * $spacing-base-size;
        }
    }
    // .mt-1
    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}#{$directionKey}-#{$sizeKey} {
            #{$type}-#{$direction}: $size * $spacing-base-size;
        }
        }
    }
}